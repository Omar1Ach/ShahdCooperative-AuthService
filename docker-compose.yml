version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: shahdcooperative-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Omar123@
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - shahdcooperative-network
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Omar123@ -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: shahdcooperative-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin123
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - shahdcooperative-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  # Auth Service API
  authservice:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shahdcooperative-authservice
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=ShahdCooperative;User Id=sa;Password=Omar123@;TrustServerCertificate=True;MultipleActiveResultSets=true
      - JwtSettings__SecretKey=YourSuperSecretKeyForJWTThatIsAtLeast32CharactersLong!
      - JwtSettings__Issuer=ShahdCooperativeAuthService
      - JwtSettings__Audience=ShahdCooperativeAPI
      - JwtSettings__AccessTokenExpiryMinutes=60
      - JwtSettings__RefreshTokenExpiryDays=7
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__Username=admin
      - RabbitMQ__Password=admin123
      - RabbitMQ__VirtualHost=/
      - RabbitMQ__Exchange=shahdcooperative.events
    ports:
      - "5000:8080"
    depends_on:
      sqlserver:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - shahdcooperative-network
    restart: unless-stopped

volumes:
  sqlserver-data:
    driver: local
  rabbitmq-data:
    driver: local

networks:
  shahdcooperative-network:
    driver: bridge
